# -*- coding: utf-8 -*-
"""multilin.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BkRshdwynj9PAGuIT4JgL_rMkpwXfpc_

Mohd Zain Multivariate Regression
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from google.colab import files 
al=files.upload()

import io
df=pd.read_csv(io.BytesIO(al['insurance.csv']))

df.head(7)

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
import warnings
warnings.filterwarnings("ignore")

shape=df.shape
print("Dataset contains {} rows and {} columns".format(shape[0],shape[1]))

x=df.iloc[:,:6].values
y=df.iloc[:,3].values

#transforming categorical input features to numerical form
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder() #In this data we have categorical input feature which is to be converted into discrete using labelencoder
label = le.fit_transform(df['region']) #these are categorical data values
label2=le.fit_transform(df['smoker'])
label3=le.fit_transform(df['sex'])
df.drop('smoker',axis=1,inplace=True)
df.drop("region", axis=1, inplace=True)
df.drop('sex',axis=1,inplace=True)
df["region"] = label
df['smoker']=label2
df['sex']=label3
df

from sklearn.model_selection import train_test_split
# splitting the data
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 10)

from sklearn.linear_model import LinearRegression
LR = LinearRegression()
LR.fit(x_train,y_train)

y_pred =  LR.predict(x_test)

from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score

mean_absolute_error(y_test,y_pred)

mean_squared_error(y_test,y_pred)

acc=r2_score(y_test,y_pred)
acc

pred_df=pd.DataFrame({'Actual Value':y_test,'Predicted Value':y_pred,'Difference':y_test-y_pred})
pred_df

plt.scatter(y_test,y_pred);
plt.xlabel('Actual');
plt.ylabel('Predicted');

sns.regplot(x=y_test,y=y_pred,ci=None,color ='blue');

